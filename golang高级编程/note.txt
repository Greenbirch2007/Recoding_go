

go语言高级编程

2020.1.19
柴树杉　　曹春晖


第１章语言基础

类c语言

自带的标准库的net/http包构造了一个独立运行的http服务。
其中http.HandleFunc("/",...)
针对/根路径请求注册了响应处理函数。
在相应处理函数汇总，我们依然使用fmt.Fprintf格式化输出函数
实现了通过http协议向请求的客户端打印格式化的字符串，
同时通过标准库的日志包在服务器端也打印相关字符串。
最后通过http.ListenAndServe　函数调用用来启动http服务

1.3 数组，字符串和切片


在主流的编程语言中，数组是使用最频繁的。

Go语言汇总数组，字符串和切片三者是密切相关的数据结构。


这三种数据类型，在底层原始数有着相同的内存结构，
在上层，因为语法的限制有着不同的行为表现。
首先,Go语言的数组是一种值类型，虽然数组的元素可以被修改，但是
数组本身的赋值和函数传参都是以整体复制的方式处理的，
Go语言字符串底层数据也是对应的字节数组，但是
字符串的只读属性禁止了在程度中对底层字节数组的
元素的修改。
字符串赋值只是复制了数据地址和对应的长度，
而不会导致底层数据的复制


切片的行为更为灵活，切片的结构和字符串结构类似，但是解除了只读限制，
切片的底层数据虽然也是对应数据类型的数组，
但是每个切片还有独立的长度和容量信息，切片赋值和函数传参时
也是将切片信息部分按传值方式处理。因为切片头还有底层数据的指针，
所以它的赋值也不会导致底层数据的赋值。其实Go语言
的赋值和函数传值规则很简单，除了闭包函数以引用的方式对外部变量访问
之外，其它赋值和函数传参数都是传值的方式处理。
要理解数组，字符串和切片三种不同的处理方式的原因

１.3.1 数组
p28



